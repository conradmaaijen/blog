<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>#!bash conrad</title><link>https://bash.maayen.nl/index.html</link>
<description>A blog about trials and errors</description><language>en</language>
<lastBuildDate>Mon, 15 May 2023 11:58:28 +0200</lastBuildDate>
<pubDate>Mon, 15 May 2023 11:58:28 +0200</pubDate>
<atom:link href="https://bash.maayen.nl/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
Parameters in bash script
</title><description><![CDATA[

<pre><code>&gt; ./test.sh one two "three four"
</code></pre>

<p>Output:</p>

<pre><code>$1 = one
$2 = two
$3 = three four

# Size of the input array
$# = 3
</code></pre>

<p>Example script:</p>

<h1>!/bin/bash</h1>

<pre><code>echo "Using \"\$*\":"
for a in "$*"; do
    echo $a;
done

echo -e "\nUsing \$*:"
for a in $*; do
    echo $a;
done

echo -e "\nUsing \"\$@\":"
for a in "$@"; do
    echo $a;
done

echo -e "\nUsing \$@:"
for a in $@; do
    echo $a;
done
</code></pre>

<p>The explanation and the results for the four cases are below.</p>

<p>In the first case, the parameters are regarded as one long quoted string:</p>

<pre><code>Using "$*":
one two three four
</code></pre>

<p>Case 2 (unquoted) - the string is broken into words by the for loop:</p>

<pre><code>Using $*:
one
two
three
four
</code></pre>

<p>Case 3 - it treats each element of $@ as a quoted string:</p>

<pre><code>Using "$@":
one
two
three four
</code></pre>

<p>Last case - it treats each element as an unquoted string, so the last one is again split by what amounts to for three four:</p>

<pre><code>Using $@:
one
two
three
four
</code></pre>

<h2>Flags</h2>

<p>Another way of passing input to a script is using flags.</p>

<pre><code>sh test.sh -f 'John Smith' -a 25 -u john
</code></pre>

<p>We’ll modify the earlier script to use flags instead of relying on positional parameters. The getopts function reads the flags in the input, and OPTARG refers to the corresponding values:</p>

<pre><code>`#!/bin/bash

while getopts u:a:f: flag
do
    case "${flag}" in
        u) username=${OPTARG};;
        a) age=${OPTARG};;
        f) fullname=${OPTARG};;
    esac
done

echo "Username: $username";
echo "Age: $age";
echo "Full Name: $fullname";
</code></pre>

<p>Let’s run this script with the same input as before, only this time, we’ll add flags to the input:</p>

<pre><code>sh test.sh -f 'John Smith' -a 25 -u john
</code></pre>

<p>The output is the same as before, though we have shifted the positions of the username and full name arguments:</p>

<pre><code>Username : john
Age: 25
Full Name: John Smith
Tags: bash
</code></pre>

<!-- text end -->
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://bash.maayen.nl/parameters-in-bash-script.html&text=&lt;Type your comment here but please leave the URL so that other people can follow the comments&gt;&via=conradmaaijen'>Comments? Tweet</a> 
<a href='https://twitter.com/search?q=https://bash.maayen.nl/parameters-in-bash-script.html'><span id='count-27616'></span></a>&nbsp;</p>
]]></description><link>https://bash.maayen.nl/parameters-in-bash-script.html</link>
<guid>https://bash.maayen.nl/./parameters-in-bash-script.html</guid>
<dc:creator>Conrad Maaijen</dc:creator>
<pubDate>Mon, 15 May 2023 09:25:45 +0200</pubDate></item>
<item><title>
How to generate BarCode in Laravel
</title><description><![CDATA[

<p>In this post, we will use a laravel barcode generator example. You will learn how to save generate bar code in laravel. Here, i will create a very basic example of picqer/php-barcode-generator laravel php.</p>

<p>So you can easily generate any barcode by using laravel 8, 9, any version easily. picqer/php-barcode-generator is a very composer package for generate barcode in our laravel 8 application. I can simply generate any svg, png, jpg and html image of barcode.</p>

<hr />
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://bash.maayen.nl/how-to-generate-barcode-in-laravel.html&text=&lt;Type your comment here but please leave the URL so that other people can follow the comments&gt;&via=conradmaaijen'>Comments? Tweet</a> 
<a href='https://twitter.com/search?q=https://bash.maayen.nl/how-to-generate-barcode-in-laravel.html'><span id='count-7649'></span></a>&nbsp;</p>
]]></description><link>https://bash.maayen.nl/how-to-generate-barcode-in-laravel.html</link>
<guid>https://bash.maayen.nl/./how-to-generate-barcode-in-laravel.html</guid>
<dc:creator>Conrad Maaijen</dc:creator>
<pubDate>Fri, 12 May 2023 13:50:36 +0200</pubDate></item>
<item><title>
Better deletion of files with Trash
</title><description><![CDATA[

<p>Ever got to the point when you did a <code>rm delete-me.txt</code> and then realized you made a mistake by deleting this file. Luckily we have a Recycle bin right? Well we have, but the <code>delete-me.txt</code> file is not in it obviously, <code>rm</code> completely removes the file from your computer.</p>

<p>Better would be installing <code>Trash</code> on your machine. Trash moves you file to the Recycle bin like it does when you remove a file using the Finder on a Mac. So let install <a href="https://github.com/sindresorhus/trash">Trash</a>.</p>

<hr />
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://bash.maayen.nl/better-deletion-of-files-with-trash.html&text=&lt;Type your comment here but please leave the URL so that other people can follow the comments&gt;&via=conradmaaijen'>Comments? Tweet</a> 
<a href='https://twitter.com/search?q=https://bash.maayen.nl/better-deletion-of-files-with-trash.html'><span id='count-9946'></span></a>&nbsp;</p>
]]></description><link>https://bash.maayen.nl/better-deletion-of-files-with-trash.html</link>
<guid>https://bash.maayen.nl/./better-deletion-of-files-with-trash.html</guid>
<dc:creator>Conrad Maaijen</dc:creator>
<pubDate>Fri, 12 May 2023 13:39:15 +0200</pubDate></item>
<item><title>
Create a directory and go into it.
</title><description><![CDATA[

<p>Sometime the smallest bash scripts will help you stopping from doing the same thing over and over again.
E.g. typing <code>mkdir sample</code> and then <code>cd sample</code>.</p>

<hr />
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://bash.maayen.nl/create-a-directory-and-go-into-it.html&text=&lt;Type your comment here but please leave the URL so that other people can follow the comments&gt;&via=conradmaaijen'>Comments? Tweet</a> 
<a href='https://twitter.com/search?q=https://bash.maayen.nl/create-a-directory-and-go-into-it.html'><span id='count-25090'></span></a>&nbsp;</p>
]]></description><link>https://bash.maayen.nl/create-a-directory-and-go-into-it.html</link>
<guid>https://bash.maayen.nl/./create-a-directory-and-go-into-it.html</guid>
<dc:creator>Conrad Maaijen</dc:creator>
<pubDate>Fri, 12 May 2023 11:32:51 +0200</pubDate></item>
<item><title>
How to Push an Existing Project to Github
</title><description><![CDATA[

<p>From your terminal, run the following commands after navigating to the folder you would like to add.</p>

<h2>Initialize the Git Repo</h2>

<p>Make sure you are in the root directory of the project you want to push to GitHub and run: 
<em>Note: If you already have an initialized Git repository, you can skip this command.</em></p>

<hr />
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://bash.maayen.nl/how-to-push-an-existing-project-to-github.html&text=&lt;Type your comment here but please leave the URL so that other people can follow the comments&gt;&via=conradmaaijen'>Comments? Tweet</a> 
<a href='https://twitter.com/search?q=https://bash.maayen.nl/how-to-push-an-existing-project-to-github.html'><span id='count-11734'></span></a>&nbsp;</p>
]]></description><link>https://bash.maayen.nl/how-to-push-an-existing-project-to-github.html</link>
<guid>https://bash.maayen.nl/./how-to-push-an-existing-project-to-github.html</guid>
<dc:creator>Conrad Maaijen</dc:creator>
<pubDate>Fri, 12 May 2023 09:35:07 +0200</pubDate></item>
</channel></rss>
